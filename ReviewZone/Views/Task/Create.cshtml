@model ReviewZone.Models.TaskModel

@{ ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml"; }


<link href="~/Content/CSS/Taskcreate.css" rel="stylesheet" />
<main id="clx-page-content" role="main" class="page-content ">
    <div class="row">
        <div class="col-md-12">
            <div class="panel">
                <div class="panel-hdr">
                    <h2><span></span>Add New Task</h2>
                    <div class="panel-toolbar">
                        <div class="btn-group">
                            <a href="@Url.Action("GetAllTask", "Task")" class="btn btn-secondary waves-effect waves-themed"> Cancel</a>
                        </div>
                    </div>
                </div>
                @using (Html.BeginForm())
                {
    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="panel-container show" id="ibox_form">
                                        <div class="panel-content">
                                            <div class="px-2">
                                                <form id="rform">
                                                    <div class="row align-items-center justify-content-center">
                                                        <div class="col-md-6 col-sm-12">
                                                            <div class="mb-3 row">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label h6  col-md-2" })
                                                                    <div class="col-md-10">
                                                                        @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                                                                        @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="mb-3">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(model => model.Evaluator_ID, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                                    <div class="col-md-10">

                                                                        @Html.DropDownListFor(model => model.Evaluator_ID, ViewBag.evaluatorList as SelectList, "--Select Employee--", new { @class = "form-control" })
                                                                        @Html.ValidationMessageFor(model => model.Evaluator_ID, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                                <span class="help-block"><a href="@Url.Action("Create", "Employee")" id="contact_add">| Or Add New Employee</a> </span>
                                                            </div>
                                                            <div class="mb-3 row">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label h6  col-md-2" })
                                                                    <div class="col-md-10">
                                                                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                                                                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="mb-3">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                                    <div class="col-md-10">

                                                                        @Html.DropDownListFor(model => model.AssignedTo, ViewBag.employeeList as SelectList, "--Select Assigned Employee--", new { @class = "form-control" })
                                                                        @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                                <span class="help-block"><a href="@Url.Action("Create", "Employee")" id="contact_add">| Or Add New Employee</a> </span>
                                                            </div>
                                                            <div class="mb-3 row">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label h6  col-md-2" })
                                                                    <div class="col-md-10">
                                                                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="mb-3 row">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label h6  col-md-2" })
                                                                    <div class="col-md-10">
                                                                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row align-items-center justify-content-center">
                                                        <div class="col-md-6">
                                                            <div class="mb-3">
                                                                @if (User.Identity.IsAuthenticated)
                                                                {
                                                                    if (User.IsInRole("admin") || User.IsInRole("evaluator"))
                                                                    {
                                                <button class="btn btn-primary mt-3 mr-3 waves-effect waves-themed" value="Create" type="submit" id="submit">
                                                    <i class="fas fa-save">
                                                    </i>
                                                    Submit
                                                </button>}
                                                                }




                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>}
            </div>
        </div>
    </div>
</main>


<script type="text/javascript">
    function ShowSuccessMsg() {
        swal("Task Created!", "Task Successfully Created!", "success");

    }

    function ShowFailure() {
        swal("Invalid Inputs!", "Task Cannot Be Created!", "error");
    }

    const myDatePicker = MCDatepicker.create({
        el: '#DueDate',
    })

</script>
@if (ViewBag.JavaScriptFunction != null)
{
    <script type="text/javascript">
        @Html.Raw(ViewBag.JavaScriptFunction)
    </script>
}
