@model ReviewZone.Models.EvaluationModel

@{
    ViewBag.Title = "Create";
}

<link href="~/Content/CSS/Accountcreate.css" rel="stylesheet" />
<main id="clx-page-content" role="main" class="page-content ">
    <div class="row">
        <div class="col-md-12">
            <div class="panel">
                <div class="panel-hdr">
                    <h2><span></span>Add New Evaluation</h2>
                    <div class="panel-toolbar">
                        <div class="btn-group">
                            <a href="@Url.Action("GetAllEvaluation", "Evaluation")" class="btn btn-secondary waves-effect waves-themed"> Cancel</a>
                        </div>
                    </div>
                </div>
                <div class="panel-container" id="ibox_form">
                    <div class="panel-container show" id="ibox_form">
                        <div class="panel-content">
                            <div class="px-2">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <form id="rform">
                                        <div class="row align-items-center justify-content-center">
                                            <div class="col-md-6 col-sm-12">
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Emp_ID, htmlAttributes: new { @class = "control-label h6  h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Emp_ID, ViewBag.employeeList as SelectList, "--Select Employee--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Emp_ID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <span class="help-block"><a href="@Url.Action("Create", "Employee")" id="contact_add">| Or Add New Employee</a> </span>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Task_ID, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Task_ID, ViewBag.taskList as SelectList, "--Select Task--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Task_ID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <span class="help-block"><a href="@Url.Action("Create", "Task")" id="contact_add">| Or Add New Task</a> </span>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Evaluator_ID, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Evaluator_ID, ViewBag.evaluatorList as SelectList, "--Select Evaluator--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Evaluator_ID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <span class="help-block"><a href="@Url.Action("Create", "Evaluator")" id="contact_add">| Or Add New Evaluator</a> </span>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Efficiency, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Efficiency, new SelectList(ViewBag.rateList), "--Select Efficiency--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Efficiency, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Timeliness, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Timeliness, new SelectList(ViewBag.rateList), "--Select Timeliness--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Timeliness, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Quality, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Quality, new SelectList(ViewBag.rateList), "--Select Quality--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Quality, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Accuracy, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Accuracy, new SelectList(ViewBag.rateList), "--Select Accuracy--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Accuracy, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Performance, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.EditorFor(model => model.Performance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Performance, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="mb-3 row">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row align-items-center justify-content-center">
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        @if (User.Identity.IsAuthenticated)
                                                        {
                                                            if (User.IsInRole("admin") || User.IsInRole("evaluator"))
                                                            {
                                                                <button class="btn btn-primary mt-3 mr-3 waves-effect waves-themed" value="Create" type="submit" id="submit">
                                                                    <i class="fas fa-save">
                                                                    </i>
                                                                    Save
                                                                </button>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                    </form>
                                }
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
</main>
<script>
    $(function () {
        $("#Efficiency,#Timeliness,#Quality,#Accuracy").change(function () {
            var e = parseInt($("#Efficiency").val());
            var t = parseInt($("#Timeliness").val());
            var q = parseInt($("#Quality").val());
            var a = parseInt($("#Accuracy").val());

            var p = ((e + t + q + a) / 20) * 100;
            $("#Performance").val(p.toString() + "%");
        });
    });

    const myDatePicker = MCDatepicker.create({
        el: '#Date',
    })
</script>
<script type="text/javascript">
    function ShowSuccessMsg() {
        swal("Evaluation Created!", "Evaluation Successfully Created!", "success");

    }

    function ShowFailure() {
        swal("Invalid Inputs!", "Evaluation Cannot Be Created!", "error");
    }



</script>
@if (ViewBag.JavaScriptFunction != null)
{
    <script type="text/javascript">
        @Html.Raw(ViewBag.JavaScriptFunction)
    </script>
}
