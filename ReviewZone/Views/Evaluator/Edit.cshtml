@model ReviewZone.Models.EvaluatorModel

@{
    ViewBag.Title = "Edit";
}

<link href="~/Content/CSS/Accountcreate.css" rel="stylesheet" />
<main id="clx-page-content" role="main" class="page-content ">
    <div class="row">
        <div class="col-md-12">
            <div class="panel">
                <div class="panel-hdr">
                    <h2><span></span>Add New Evaluator</h2>
                    <div class="panel-toolbar">
                        <div class="btn-group">
                            <a href="@Url.Action("GetAllEvaluator", "Evaluator")" class="btn btn-secondary waves-effect waves-themed"> Cancel</a>
                        </div>
                    </div>
                </div>
                <div class="panel-container show" id="ibox_form">
                    <div class="panel-content">
                        <div class="px-2">
                            <div class="alert alert-danger" id="emsg" style="display: none;">
                                <span id="emsgbody"></span>
                            </div>
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Evaluator_ID)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <form id="rform">
                                    <div class="row align-items-center justify-content-center">
                                        <div class="col-md-6 col-sm-12">
                                            <div class="mb-3 row">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Emp_ID, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.Emp_ID, ViewBag.employeeList as SelectList, "--Select Employee--", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Emp_ID, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mb-3 row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label h6  col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mb-3 row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label h6  col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row align-items-center justify-content-center">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                @if (User.Identity.IsAuthenticated)
                                                {

                                                    if (User.IsInRole("admin") || User.IsInRole("evaluator"))
                                                    {
                                                        <button class="btn btn-primary mt-3 mr-3 waves-effect waves-themed" value="Save" type="submit" id="submit">
                                                            <i class="fas fa-save">
                                                            </i>
                                                            Save
                                                        </button>}
                                                }
                                                @if (User.Identity.IsAuthenticated)
                                                {
                                                    if (User.IsInRole("admin"))
                                                    {
                                                        <a onclick="DeleteBtn()" class="btn btn-danger mt-3 mr-3 ml-3 waves-effect waves-themed has-tooltip">
                                                            <i class="fas fa-trash-alt">
                                                            </i>
                                                            Delete
                                                        </a>
                                                    }
                                                }

                                            </div>
                                        </div>
                                    </div>
                                </form>}
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<script>
    swal("Evaluator Updated!", "Evaluator Has Been Succesfully Updated!", "success")
        .then(function () {
            window.location = "/Evaluator/GetAllEvaluator";
        });
    }

    function ShowFailure() {
        swal("Invalid Inputs!", "Ecaluator Cannot Be Updated!", "error");
    }

    function DeleteBtn() {

        var Evaluator_ID = $("#Evaluator_ID").val();
        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this evaluator!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '/Evaluator/Delete?id=' + Evaluator_ID,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.success) {
                                swal(response.responseText, {
                                    icon: "success",
                                }).then(function () {
                                    window.location.href = "/Evaluator/GetAllEvaluator"
                                });
                            } else {
                                swal("Cannot Be Deleted!", response.responseText, "error");
                            }

                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                } else {
                    swal("Your evaluator is safe!");
                }
            });
    }</script>
@if (ViewBag.JavaScriptFunction != null)
{
<script type="text/javascript">
        @Html.Raw(ViewBag.JavaScriptFunction)
</script>}
