@model ReviewZone.Models.InvoiceModel

@{ ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<link href="~/Content/CSS/Invoicecreate.css" rel="stylesheet" />
<main id="clx-page-content" role="main" class="page-content ">
    <form id="invform" method="post">
        <div class="row" id="ibox_form">
            <div class="alert alert-danger" id="emsg" style="display: none;">
                <span id="emsgbody"></span>
            </div>
            <div class="col-md-12">
                <div class="panel">
                    <div class="panel-hdr">
                        <h2>
                            NFC: B
                            @Html.DisplayFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </h2>
                        <div class="panel-toolbar">
                            <input type="hidden" name="invoice_id" value="">
                            <div class="btn-group">
                                <button class="btn btn-sm btn-primary mr-3 waves-effect waves-themed" value="Create" type="submit" id="submit">
                                    <i class="fas fa-save">
                                    </i>
                                    Save
                                </button>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    if (User.IsInRole("admin"))
                                    {
                                        <a onclick="DeleteBtn()" class="btn btn-danger mr-3 ml-3 waves-effect waves-themed has-tooltip">
                                            <i class="fas fa-trash-alt">
                                            </i>
                                            Delete
                                        </a>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="panel-container">
                        <div class="panel-content">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.InvoiceNumber)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <div class="form-group">

                                                        @Html.LabelFor(model => model.Customer_ID, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">

                                                            @Html.DropDownListFor(model => model.Customer_ID, ViewBag.customerList as SelectList, "--Select Owner--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <span class="help-block"><a href="#" id="contact_add">| Or Add New Customer</a> </span>
                                                </div>
                                                <div class="mb-3">
                                                    <div class="form-group">

                                                        @Html.LabelFor(model => model.Emp_ID, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Emp_ID, ViewBag.employeeList as SelectList, "--Select Owner--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Emp_ID, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <span class="help-block"><a href="@Url.Action("Create", "Employee")" id="employee_add">| Or Add New Employee</a> </span>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.statusList), new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @Value = @DateTime.Now, @class = "form-control", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label h6  col-md-4" })
                                                        <div class="col-md-10">
                                                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="table-responsive mt-3">
                                    <table class="table table-bordered invoice-table">
                                        <thead>
                                            <tr>
                                                <th width="30%">Item Name</th>
                                                <th width="10%">Quantity</th>
                                                <th width="15%">Price</th>
                                                <th>Discount</th>
                                                <th width="20%">Tax</th>
                                                <th width="15%">Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>
                                                    @Html.DropDownListFor(model => model.ItemNumber, ViewBag.productList as SelectList, "--Select Product--", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.ItemNumber, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.DropDownListFor(model => model.Tax, new SelectList(ViewBag.taxList), new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.Tot, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Tot, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <button type="button" value="Create" class="btn btn-primary waves-effect waves-themed" id="btnAdd"><i class="fas fa-plus"></i> Add Product</button>
                                <br>
                                <br>
                                <hr>
                                <div class="table-responsive mt-3">
                                    <table class="table table-bordered table-striped table-hover invoice-table" id="invoice_items">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th width="25%">Item Name</th>
                                                <th width="20%">Quantity</th>
                                                <th width="15%">Price</th>
                                                <th>Discount</th>
                                                <th width="20%">Tax</th>
                                                <th width="15%">Total</th>
                                                <th width="10%">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.ItemDetails)
                                            {

                                                <tr>
                                                    <td>
                                                        @Html.HiddenFor(modelItem => item.InvoiceDetailsID)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.ItemNumber, new { @class = "form-control" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Price, new { htmlAttributes = new { @class = "form-control" } })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Tax, new { @class = "form-control" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Total, new { htmlAttributes = new { @class = "form-control" } })
                                                    </td>
                                                    <td>
                                                        <button type="button" class="btn btn-danger waves-effect waves-themed" id="btnRemove" style="display: block;"><i class="fas fa-minus-circle"></i> Delete</button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 offset-md-8">
                                        <table class="table invoice-total">
                                            <tbody>
                                                <tr>
                                                    <td><strong>Sub Total :</strong></td>
                                                    <td class="amount">
                                                        @Html.EditorFor(model => model.Sub_Total, new { htmlAttributes = new { @class = "form-control no-border", @readonly = "readonly" } })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <strong>Discount <span id="is_pt"></span> : </strong>
                                                    </td>
                                                    <td class="amount">
                                                        @Html.EditorFor(model => model.DiscountAmount, new { htmlAttributes = new { @class = "form-control no-border", @readonly = "readonly" } })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><strong>TAX :</strong></td>
                                                    <td id="taxtotal" class="amount">
                                                        @Html.EditorFor(model => model.TaxAmount, new { htmlAttributes = new { @class = "form-control no-border", @readonly = "readonly" } })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><strong>TOTAL :</strong></td>
                                                    <td class="amount">
                                                        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control no-border", @readonly = "readonly" } })
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <hr />
                                <br>}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</main>


<script>
    $(document).ready(function () {
        var Tax = 0.00;
        $("#TaxAmount").val(Tax.toFixed(2))

        $("#Quantity,#Price").change(function () {
            var q = parseFloat($("#Quantity").val());
            var p = parseFloat($("#Price").val());
            var t = (q * p);
            $("#Tot").val(t);

        });

        $("#Discount").change(function () {
            var d = parseFloat($("#Discount").val());
            var tt = parseFloat($("#Tot").val());
            var tot = (tt - ((d / 100) * tt));
            $("#Tot").val(tot);
        });

        $("#btnAdd").click(function (e) {
            e.preventDefault();
            $("#invoice_items").append("<tr><td></td><td>" + $('#ItemNumber').val() + "</td><td>" + $('#Quantity').val() + "</td><td>" + $('#Price').val() + "</td><td>" + $('#Discount').val() + "</td><td>" + $('#Tax').val() + "</td><td>" + $('#Tot').val() + `</td><td><button type="button" class="btn btn-danger waves-effect waves-themed" id="btnRemove" style="display: block;"><i class="fas fa-minus-circle"></i> Delete</button></td></tr></body>`);
            calculations();

        });


        function calculations() {
            var TotalAmount = 0.00;
            var Sub_Total = 0.00;
            var Discount = 0.00;

            console.log(TotalAmount, Sub_Total, Discount)

            $('#invoice_items tr').each(function (index, tr) {
                $(tr).each(function () {

                    var $Quantity = $(tr).find('td:eq(2)').text();
                    console.log($Quantity)
                    var $Price = $(tr).find('td:eq(3)').text();
                    console.log($Price)
                    var $Discount = $(tr).find('td:eq(4)').text();
                    console.log($Discount)
                    var $TotalAmount = $(tr).find('td:eq(6)').text();
                    console.log($TotalAmount)
                    var $subtotal = 0;
                    var $discount = 0;

                    $subtotal = $Quantity * $Price;
                    console.log($subtotal)

                    $discount = (($Discount / 100) * $subtotal);

                    Discount += $discount;

                    Sub_Total += $subtotal;

                    TotalAmount += Number($TotalAmount);

                    $("#Quantity").val(0);
                    $("#Price").val(0);
                    $("#Discount").val(0);
                    $("#Tot").val(0);

                });
            });
            $("#Sub_Total").val(Sub_Total.toFixed(2))
            $("#DiscountAmount").val(Discount.toFixed(2))

            $("#Total").val(TotalAmount.toFixed(2))
        }

        $("#invoice_items").on('click', '#btnRemove', function () {
            var InvoiceDetailsID = $(this).closest("tr").find("td:eq(0) input").val();
            let confirmAction = confirm("Are you sure to Delete");
            if (confirmAction) {
                $(this).closest('tr').remove();
                calculations();
                $.ajax({
                    type: "Post",
                    url: '/Invoice/DeleteInvoiceDetails?id=' + InvoiceDetailsID,
                    /*            datatype: "json",*/
                    cache: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        alert('Success');

                    },
                    error: function (xhr) {
                        alert('No Valid Data');
                    }
                });
            } else {
                return;
            }


        });
        $("#submit").click(function (e) {
            e.preventDefault();
            SaveRecords();
        });


    });


    function SaveRecords() {

        var listOfInvoiceDetailsModel = [];
        $('#invoice_items tr').each(function (index, tr) {
            var obj = {}

            $(tr).each(function () {
                obj['InvoiceDetailsID'] = $(tr).find('td:eq(0) input').val();
                obj['ItemNumber'] = $(tr).find('td:eq(1)').text();
                obj['Quantity'] = $(tr).find('td:eq(2)').text();
                obj['Price'] = $(tr).find('td:eq(3)').text();
                obj['Discount'] = $(tr).find('td:eq(4)').text();
                obj['Tax'] = $(tr).find('td:eq(5)').text();
                obj['Total'] = $(tr).find('td:eq(6)').text();

            });
            listOfInvoiceDetailsModel.push(obj);
        });

        console.log(listOfInvoiceDetailsModel);

        var InvoiceNumber = $("#InvoiceNumber").val();
        var Customer_ID = $("#Customer_ID").val();
        var Emp_ID = $("#Emp_ID").val();
        var Status = $("#Status").val();
        var Title = $("#Title").val();
        var Address = $("#Address").val();
        var OrderDate = $("#OrderDate").val();
        var CreatedOn = $("#CreatedOn").val();
        var DueDate = $("#DueDate").val();
        var Sub_Total = $("#Sub_Total").val();
        var DiscountAmount = $("#DiscountAmount").val();
        var TaxAmount = $("#TaxAmount").val();
        var Total = $("#Total").val();


        listOfInvoiceDetailsModel.shift();

        var model = {
            "ItemDetails": listOfInvoiceDetailsModel,
            "InvoiceNumber": InvoiceNumber,
            "Customer_ID": Customer_ID,
            "Emp_ID": Emp_ID,
            "Status": Status,
            "Title": Title,
            "Address": Address,
            "OrderDate": OrderDate,
            "CreatedOn": CreatedOn,
            "DueDate": DueDate,
            "Sub_Total": Sub_Total,
            "DiscountAmount": DiscountAmount,
            "TaxAmount": TaxAmount,
            "Total": Total,
        }


        $.ajax({
            type: "Post",
            url: "/Invoice/Edit",
            data: JSON.stringify(model),
            /*            datatype: "json",*/
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                    swal("Invoice Updated!", "Invoice Has Been Succesfully Updated!", "success")
                    .then(function () {
                        window.location = '@Url.Action("GetAllInvoice", "Invoice")';
                    });
            },
            error: function (xhr) {
                swal("Cannot Be Updated!", response.responseText, "error");
            }
        });

    }

    const myDatePicker = MCDatepicker.create({
        el: '#OrderDate'
    })

    const myDatePicker2 = MCDatepicker.create({
        el: '#DueDate',
    })
    function ShowSuccessMsg() {
        swal("Invoice Updated!", "Invoice Has Been Succesfully Updated!", "success")
            .then(function () {
                window.location = "/Invoice/GetAllInvoice";
            });
    }

    function ShowFailure() {
        swal("Invalid Inputs!", "Invoice Cannot Be Updated!", "error");
    }

    function DeleteBtn() {

        var InvoiceNumber = $("#InvoiceNumber").val();
        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this invoice!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '/Invoice/Delete?id=' + InvoiceNumber,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.success) {
                                swal(response.responseText, {
                                    icon: "success",
                                }).then(function () {
                                    window.location.href = "/Invoice/GetAllInvoice"
                                });
                            } else {
                                swal("Cannot Be Deleted!", response.responseText, "error");
                            }

                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                } else {
                    swal("Your invoice is safe!");
                }
            });
    }
</script>
@if (ViewBag.JavaScriptFunction != null)
{
<script type="text/javascript">
        @Html.Raw(ViewBag.JavaScriptFunction)
</script>}



